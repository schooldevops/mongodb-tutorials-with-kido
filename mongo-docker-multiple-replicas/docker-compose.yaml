version: '3.8'

services:
  mongo01:
    container_name: mongo01
    image: mongo
    volumes:
      - ./mongo/data01:/data/db
      - ./rs-init.sh:/scripts/rs-init.sh
      - ./mongodb.key:/mongodb.key
    networks:
      - mongo-network
    ports:
      - 27021:27017
    links:
      - mongo02
      - mongo03
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    command: ["--keyFile", "./mongodb.key",  "--bind_ip_all", "--replSet", "mongo-rs" ]

  mongo02:
    container_name: mongo02
    image: mongo
    volumes:
      - ./mongo/data02:/data/db
      - ./mongodb.key:/mongodb.key
    networks:
      - mongo-network
    ports:
      - 27022:27017
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    command: ["--keyFile", "./mongodb.key", "--bind_ip_all", "--replSet", "mongo-rs" ]

  mongo03:
    container_name: mongo03
    image: mongo
    volumes:
      - ./mongo/data03:/data/db
      - ./mongodb.key:/mongodb.key
    networks:
      - mongo-network
    ports:
      - 27023:27017
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    command: ["--keyFile", "./mongodb.key",  "--bind_ip_all", "--replSet", "mongo-rs" ]

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
        - 8081:8081
    # networks:
    #   - mongo-network
    links:
      - mongo01
    depends_on: 
      - mongo01 
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo01
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      # - ME_CONFIG_BASICAUTH_USERNAME=admin
      # - ME_CONFIG_BASICAUTH_PASSWORD=rootpass

volumes:
    data: {} 

networks:
  mongo-network:
    driver: bridge